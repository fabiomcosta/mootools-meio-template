/**
 * moo.meio.template.js
 * @version 0.9
 * Copyright (c) 2008 Fabio M. Costa http://www.meiocodigo.com
 * The MIT License (http://www.opensource.org/licenses/mit-license.php)
 */

if(typeof Meio=="undefined"){var Meio={}}(function(){var B=document.id||B;var E=(function(){var F=document.createElement("div");F.className="something";F.removeAttribute("class");return F.className==="something"})();var D={"class":"className","for":"htmlFor"};var A={option:[1,"<select>","</select>"],tbody:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"]};A.th=A.td;A.optgroup=A.option;A.thead=A.tfoot=A.tbody;var C=$extend({"uid":null},Element.Prototype);Meio.Template=new Class({Implements:Options,options:{debug:false,ignore:{},templateRegex:/\{([^{}]+)\}/g},normalizeRegex:[(/>\s+</g),"><",(/(<\/?)(\w+)([>\s\/])/g),function(I,H,G,F){return H+G.toLowerCase()+F},(/\s[\w-]+=["']{2}(?=[^<>]*>)/g),"",(/\s[^=\W\s>]+(?=[\s>])(?=[^<>]*>)/g),"",(/(\s[\w-]+=)([^\s"][^\s>]+[^\s"])(?=[^<>]*>)/g),'$1"$2"',(/\s+(\\?>)/g),"$1"],initialize:function(G,F){this.setOptions(F);this.template=($type(G)==="element")?G.get("html"):G},matchWith:function(I){var N=false,F=null;if($type(this.options.ignore)==="object"){F=($type(I)==="element")?B(I):this.getCorrectInnerHtmlStructure(I);if(!F.getParent("body")){F.setStyle("display","none").inject(document.body);N=true}this.ignoreNodes(F);I=F.innerHTML;if(N){F.destroy()}}var J=this.template,L=[],M=this.normalizeRegex;for(var G=0;G<M.length;G+=2){I=I.replace(M[G],M[G+1]);J=J.replace(M[G],M[G+1])}var K=J.replace(this.options.templateRegex,function(P,O){L.push(O);return"(.*)"});var H=I.match(new RegExp(K));if(!H&&this.options.debug){this.debug(J,I)}return(H)?H.slice(1).associate(L):null},getCorrectInnerHtmlStructure:function(J){var H=J.match(/<\/?([^\W\s>]+)/i),F=H[1].toLowerCase(),G=new Element("div",{styles:{"display":"none"}});if(A[F]){J=A[F][1]+J+A[F][2];G.innerHTML=J;for(var I=A[F][0];I--;){G=G.firstChild}return B(G)}else{G.innerHTML=J;return G}},ignoreNodes:function(F){var I=this.options.ignore,G,H;for(selector in I){G=I[selector];if($type(G)=="string"){switch(G){case"*":F.getElements(selector).dispose();break;case"+":H=F.getElements(selector);this.removeAttributes(H);break;default:G=[G]}}if($type(G)=="array"){H=F.getElements(selector);this.removeAttributes(H,G)}}},removeAttributes:function(J,H){var F;for(var G=J.length;G--;){H=H||J[G].attributes;for(var I=H.length;I--;){F=H[I];if(F.nodeName&&(F=F.nodeName)&&F.specified&&!C[F]){break}if(F=="style"){J[G].style.cssText=""}else{if(E&&D[F]){F=D[F]}J[G].removeAttribute(F)}}}},debug:function(G,F){var H="If they don't match its because you are forgetting to ignore something. Template:"+G+" Cleaned string: "+F;(console&&console.log)?console.log(H):alert(H)}});Native.implement([String,Element],{intersect:function(G,F){return new Meio.Template(this,F).matchWith(G)}})})()